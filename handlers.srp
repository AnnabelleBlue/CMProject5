
require "helpers.srp"
require "variables.srp"


///////////////////////////////////////
//
//              Handlers
//
///////////////////////////////////////

def osc_handler_1_fader1(path, vel)
    display rep

def handle_8_push(path, isOn)
    display path, isOn
    
def handle_2_multitoggle(path, isOn)
    display path, isOn
 
def handle_3_rotary(path, turn)
    display path, turn
    
def handle_3_toggle(path, isOn)
    display path, isOn
        
        
def handle_2_push(path, isOn)
    display path, isOn
    
def handle_3_push(path, isOn)
    display path, isOn
    
def handle_3_fader(path, per)
    display path, per
    
///////////////////////////////////////
//
//          Server Methods
//
///////////////////////////////////////
def add_server_methods()
    // SOLOIST
    for i = 1 to 25
        osc_server_method("/8/push" + str(i), "f", nil, 'handle_8_push')
        
    // DRUM BEAT
    for i = 1 to 7
        for j = 1 to 17
            osc_server_method("/2/multitoggle/" + str(i) + "/" + str(j), "f", nil, 'handle_2_multitoggle')

    osc_server_method("/1/fader1", "f", nil, 'osc_handler_1_fader1')

    // ALGO SWITCHER
    for i = 1 to 7
        osc_server_method("/3/rotary" + str(i), "f", nil, 'handle_3_rotary')

    for i = 1 to 6
        osc_server_method("/3/toggle" + str(i), "f", nil, 'handle_3_toggle')
        
    // PARAMETER CONTROLLER
    for i = 1 to 13
        osc_server_method("/2/push" + str(i), "f", nil, 'handle_2_push')
        
    for i = 1 to 6
        osc_server_method("/3/fader" + str(i), "f", nil, 'handle_3_fader')
    
    for i = 1 to 5
        osc_server_method("/3/push" + str(i), "f", nil, 'handle_3_push')
        
